---
- fail:
    msg: "For custom app_subdomain_type you must define the app_subdomain to use"
  when: app_subdomain_type == "custom" and app_subdomain is not defined
- debug:
    msg: "When using app_subdomain_type 'xip.io' or 'local' app_subdomain will be ignored"
    verbosity: 0
  when: app_subdomain_type in ["xip.io","local"] and app_subdomain is defined

- name: Get storage pool info
  virt_pool:
    command: info
  register: pools

- name: Get {{ storage_pool }} storage details
  set_fact:
    storage_path: "{{ pools|json_query(storage_pool_jsonpath) }}"

- name: Create the cloud-init config drive path
  file:
    dest: '{{ storage_path }}/{{ item }}_configdrive'
    state: directory
  with_items:
    - '{{ instances }}'

- name: Create the cloud-init config drive files
  template:
    src: '{{ item[1] }}'
    dest: '{{ storage_path }}/{{ item[0] }}_configdrive/{{ item[1] }}'
  with_nested:
    - '{{ instances }}'
    - [ user-data, meta-data ]

- name: Create the cloud-init config drive
  command: 'genisoimage -output {{ storage_path }}/{{ item }}_cloud-init.iso -volid cidata -joliet -rock user-data meta-data'
  args:
    chdir: '{{ storage_path }}/{{ item }}_configdrive'
    creates: '{{ storage_path }}/{{ item }}_cloud-init.iso'
  with_items:
    - '{{ instances }}'

- name: Refresh the libvirt storage pool for openshift
  command: 'virsh pool-refresh {{ storage_pool }}'
  changed_when: false

- name: Docker drives
  include_tasks: create_docker_drive.yml
  with_items:
    - '{{ instances }}'

- name: VM drives
  include_tasks: create_drive.yml
  with_items:
    - '{{ instances }}'

- name: create libvirt instance
  virt:
    name: "{{ item }}"
    command: define
    xml: "{{ lookup('template', '../templates/node-template.xml.j2') }}"
  with_items:
    - '{{ instances }}'

- name: Ensure network {{ libvirt_network }} is active
  virt_net:
    name: '{{ libvirt_network }}'
    state: active

- name: Start VMs to run cloud-init
  virt:
    name: '{{ item }}'
    state: running
  with_items:
    - '{{ instances }}'

- name: Initialize IP list
  set_fact:
    ips: []

- name: Get IPs
  include_tasks: get_ip.yml
  with_items:
    - '{{ instances }}'

- name: Update hosts file
  become: true
  lineinfile:
    path: /etc/hosts
    regexp: '{{ item[0] }}'
    line: '{{ item[1] }} {{ item[0] }} {{ item[0]}}.{{ domain }}'
  with_together:
    - '{{ instances }}'
    - '{{ ips }}'
  when: manage_dns | bool

- name: Create inventory for {{ cluster_name }}
  template:
    src: inventory
    dest: '{{ inventory_dir }}/{{ cluster_name }}'

- name: Configure DNS for {{ cluster_name }}.{{ domain }}
  become: true
  include_tasks: configure_dns.yml
  when: manage_dns | bool
